"use strict";(self.webpackChunknpwd_nui=self.webpackChunknpwd_nui||[]).push([[6008],{16008:function(module,__unused_webpack_exports,__webpack_require__){eval('\n\nvar protocols = __webpack_require__(72337);\n\n/**\n * parsePath\n * Parses the input url.\n *\n * @name parsePath\n * @function\n * @param {String} url The input url.\n * @return {Object} An object containing the following fields:\n *\n *    - `protocols` (Array): An array with the url protocols (usually it has one element).\n *    - `protocol` (String): The first protocol or `"file"`.\n *    - `port` (String): The domain port (default: `""`).\n *    - `resource` (String): The url domain/hostname.\n *    - `host` (String): The url domain (including subdomain and port).\n *    - `user` (String): The authentication user (default: `""`).\n *    - `password` (String): The authentication password (default: `""`).\n *    - `pathname` (String): The url pathname.\n *    - `hash` (String): The url hash.\n *    - `search` (String): The url querystring value (excluding `?`).\n *    - `href` (String): The normalized input url.\n *    - `query` (Object): The url querystring, parsed as object.\n *    - `parse_failed` (Boolean): Whether the parsing failed or not.\n */\nfunction parsePath(url) {\n\n    var output = {\n        protocols: [],\n        protocol: null,\n        port: null,\n        resource: "",\n        host: "",\n        user: "",\n        password: "",\n        pathname: "",\n        hash: "",\n        search: "",\n        href: url,\n        query: {},\n        parse_failed: false\n    };\n\n    try {\n        var parsed = new URL(url);\n        output.protocols = protocols(parsed);\n        output.protocol = output.protocols[0];\n        output.port = parsed.port;\n        output.resource = parsed.hostname;\n        output.host = parsed.host;\n        output.user = parsed.username || "";\n        output.password = parsed.password || "";\n        output.pathname = parsed.pathname;\n        output.hash = parsed.hash.slice(1);\n        output.search = parsed.search.slice(1);\n        output.href = parsed.href;\n        output.query = Object.fromEntries(parsed.searchParams);\n    } catch (e) {\n        // TODO Maybe check if it is a valid local file path\n        //      In any case, these will be parsed by higher\n        //      level parsers such as parse-url, git-url-parse, git-up\n        output.protocols = ["file"];\n        output.protocol = output.protocols[0];\n        output.port = "";\n        output.resource = "";\n        output.user = "";\n        output.pathname = "";\n        output.hash = "";\n        output.search = "";\n        output.href = url;\n        output.query = {};\n        output.parse_failed = true;\n    }\n\n    return output;\n}\n\nmodule.exports = parsePath;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYwMDguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLG1CQUFPLENBQUMsS0FBVzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnB3ZC1udWkvLi9ub2RlX21vZHVsZXMvcGFyc2UtcGF0aC9saWIvaW5kZXguanM/ZjllMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHByb3RvY29scyA9IHJlcXVpcmUoXCJwcm90b2NvbHNcIik7XG5cbi8qKlxuICogcGFyc2VQYXRoXG4gKiBQYXJzZXMgdGhlIGlucHV0IHVybC5cbiAqXG4gKiBAbmFtZSBwYXJzZVBhdGhcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgaW5wdXQgdXJsLlxuICogQHJldHVybiB7T2JqZWN0fSBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgZm9sbG93aW5nIGZpZWxkczpcbiAqXG4gKiAgICAtIGBwcm90b2NvbHNgIChBcnJheSk6IEFuIGFycmF5IHdpdGggdGhlIHVybCBwcm90b2NvbHMgKHVzdWFsbHkgaXQgaGFzIG9uZSBlbGVtZW50KS5cbiAqICAgIC0gYHByb3RvY29sYCAoU3RyaW5nKTogVGhlIGZpcnN0IHByb3RvY29sIG9yIGBcImZpbGVcImAuXG4gKiAgICAtIGBwb3J0YCAoU3RyaW5nKTogVGhlIGRvbWFpbiBwb3J0IChkZWZhdWx0OiBgXCJcImApLlxuICogICAgLSBgcmVzb3VyY2VgIChTdHJpbmcpOiBUaGUgdXJsIGRvbWFpbi9ob3N0bmFtZS5cbiAqICAgIC0gYGhvc3RgIChTdHJpbmcpOiBUaGUgdXJsIGRvbWFpbiAoaW5jbHVkaW5nIHN1YmRvbWFpbiBhbmQgcG9ydCkuXG4gKiAgICAtIGB1c2VyYCAoU3RyaW5nKTogVGhlIGF1dGhlbnRpY2F0aW9uIHVzZXIgKGRlZmF1bHQ6IGBcIlwiYCkuXG4gKiAgICAtIGBwYXNzd29yZGAgKFN0cmluZyk6IFRoZSBhdXRoZW50aWNhdGlvbiBwYXNzd29yZCAoZGVmYXVsdDogYFwiXCJgKS5cbiAqICAgIC0gYHBhdGhuYW1lYCAoU3RyaW5nKTogVGhlIHVybCBwYXRobmFtZS5cbiAqICAgIC0gYGhhc2hgIChTdHJpbmcpOiBUaGUgdXJsIGhhc2guXG4gKiAgICAtIGBzZWFyY2hgIChTdHJpbmcpOiBUaGUgdXJsIHF1ZXJ5c3RyaW5nIHZhbHVlIChleGNsdWRpbmcgYD9gKS5cbiAqICAgIC0gYGhyZWZgIChTdHJpbmcpOiBUaGUgbm9ybWFsaXplZCBpbnB1dCB1cmwuXG4gKiAgICAtIGBxdWVyeWAgKE9iamVjdCk6IFRoZSB1cmwgcXVlcnlzdHJpbmcsIHBhcnNlZCBhcyBvYmplY3QuXG4gKiAgICAtIGBwYXJzZV9mYWlsZWRgIChCb29sZWFuKTogV2hldGhlciB0aGUgcGFyc2luZyBmYWlsZWQgb3Igbm90LlxuICovXG5mdW5jdGlvbiBwYXJzZVBhdGgodXJsKSB7XG5cbiAgICB2YXIgb3V0cHV0ID0ge1xuICAgICAgICBwcm90b2NvbHM6IFtdLFxuICAgICAgICBwcm90b2NvbDogbnVsbCxcbiAgICAgICAgcG9ydDogbnVsbCxcbiAgICAgICAgcmVzb3VyY2U6IFwiXCIsXG4gICAgICAgIGhvc3Q6IFwiXCIsXG4gICAgICAgIHVzZXI6IFwiXCIsXG4gICAgICAgIHBhc3N3b3JkOiBcIlwiLFxuICAgICAgICBwYXRobmFtZTogXCJcIixcbiAgICAgICAgaGFzaDogXCJcIixcbiAgICAgICAgc2VhcmNoOiBcIlwiLFxuICAgICAgICBocmVmOiB1cmwsXG4gICAgICAgIHF1ZXJ5OiB7fSxcbiAgICAgICAgcGFyc2VfZmFpbGVkOiBmYWxzZVxuICAgIH07XG5cbiAgICB0cnkge1xuICAgICAgICB2YXIgcGFyc2VkID0gbmV3IFVSTCh1cmwpO1xuICAgICAgICBvdXRwdXQucHJvdG9jb2xzID0gcHJvdG9jb2xzKHBhcnNlZCk7XG4gICAgICAgIG91dHB1dC5wcm90b2NvbCA9IG91dHB1dC5wcm90b2NvbHNbMF07XG4gICAgICAgIG91dHB1dC5wb3J0ID0gcGFyc2VkLnBvcnQ7XG4gICAgICAgIG91dHB1dC5yZXNvdXJjZSA9IHBhcnNlZC5ob3N0bmFtZTtcbiAgICAgICAgb3V0cHV0Lmhvc3QgPSBwYXJzZWQuaG9zdDtcbiAgICAgICAgb3V0cHV0LnVzZXIgPSBwYXJzZWQudXNlcm5hbWUgfHwgXCJcIjtcbiAgICAgICAgb3V0cHV0LnBhc3N3b3JkID0gcGFyc2VkLnBhc3N3b3JkIHx8IFwiXCI7XG4gICAgICAgIG91dHB1dC5wYXRobmFtZSA9IHBhcnNlZC5wYXRobmFtZTtcbiAgICAgICAgb3V0cHV0Lmhhc2ggPSBwYXJzZWQuaGFzaC5zbGljZSgxKTtcbiAgICAgICAgb3V0cHV0LnNlYXJjaCA9IHBhcnNlZC5zZWFyY2guc2xpY2UoMSk7XG4gICAgICAgIG91dHB1dC5ocmVmID0gcGFyc2VkLmhyZWY7XG4gICAgICAgIG91dHB1dC5xdWVyeSA9IE9iamVjdC5mcm9tRW50cmllcyhwYXJzZWQuc2VhcmNoUGFyYW1zKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIFRPRE8gTWF5YmUgY2hlY2sgaWYgaXQgaXMgYSB2YWxpZCBsb2NhbCBmaWxlIHBhdGhcbiAgICAgICAgLy8gICAgICBJbiBhbnkgY2FzZSwgdGhlc2Ugd2lsbCBiZSBwYXJzZWQgYnkgaGlnaGVyXG4gICAgICAgIC8vICAgICAgbGV2ZWwgcGFyc2VycyBzdWNoIGFzIHBhcnNlLXVybCwgZ2l0LXVybC1wYXJzZSwgZ2l0LXVwXG4gICAgICAgIG91dHB1dC5wcm90b2NvbHMgPSBbXCJmaWxlXCJdO1xuICAgICAgICBvdXRwdXQucHJvdG9jb2wgPSBvdXRwdXQucHJvdG9jb2xzWzBdO1xuICAgICAgICBvdXRwdXQucG9ydCA9IFwiXCI7XG4gICAgICAgIG91dHB1dC5yZXNvdXJjZSA9IFwiXCI7XG4gICAgICAgIG91dHB1dC51c2VyID0gXCJcIjtcbiAgICAgICAgb3V0cHV0LnBhdGhuYW1lID0gXCJcIjtcbiAgICAgICAgb3V0cHV0Lmhhc2ggPSBcIlwiO1xuICAgICAgICBvdXRwdXQuc2VhcmNoID0gXCJcIjtcbiAgICAgICAgb3V0cHV0LmhyZWYgPSB1cmw7XG4gICAgICAgIG91dHB1dC5xdWVyeSA9IHt9O1xuICAgICAgICBvdXRwdXQucGFyc2VfZmFpbGVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlUGF0aDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16008\n')},72337:function(module){eval('\n\n/**\n * protocols\n * Returns the protocols of an input url.\n *\n * @name protocols\n * @function\n * @param {String|URL} input The input url (string or `URL` instance)\n * @param {Boolean|Number} first If `true`, the first protocol will be returned. If number, it will represent the zero-based index of the protocols array.\n * @return {Array|String} The array of protocols or the specified protocol.\n */\nmodule.exports = function protocols(input, first) {\n\n    if (first === true) {\n        first = 0;\n    }\n\n    var prots = "";\n    if (typeof input === "string") {\n        try {\n            prots = new URL(input).protocol;\n        } catch (e) {}\n    } else if (input && input.constructor === URL) {\n        prots = input.protocol;\n    }\n\n    var splits = prots.split(/\\:|\\+/).filter(Boolean);\n\n    if (typeof first === "number") {\n        return splits[first];\n    }\n\n    return splits;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIzMzcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsZ0JBQWdCO0FBQzNCLFlBQVksY0FBYztBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixNQUFNO0FBQ047QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25wd2QtbnVpLy4vbm9kZV9tb2R1bGVzL3Byb3RvY29scy9saWIvaW5kZXguanM/MGM2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBwcm90b2NvbHNcbiAqIFJldHVybnMgdGhlIHByb3RvY29scyBvZiBhbiBpbnB1dCB1cmwuXG4gKlxuICogQG5hbWUgcHJvdG9jb2xzXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7U3RyaW5nfFVSTH0gaW5wdXQgVGhlIGlucHV0IHVybCAoc3RyaW5nIG9yIGBVUkxgIGluc3RhbmNlKVxuICogQHBhcmFtIHtCb29sZWFufE51bWJlcn0gZmlyc3QgSWYgYHRydWVgLCB0aGUgZmlyc3QgcHJvdG9jb2wgd2lsbCBiZSByZXR1cm5lZC4gSWYgbnVtYmVyLCBpdCB3aWxsIHJlcHJlc2VudCB0aGUgemVyby1iYXNlZCBpbmRleCBvZiB0aGUgcHJvdG9jb2xzIGFycmF5LlxuICogQHJldHVybiB7QXJyYXl8U3RyaW5nfSBUaGUgYXJyYXkgb2YgcHJvdG9jb2xzIG9yIHRoZSBzcGVjaWZpZWQgcHJvdG9jb2wuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcHJvdG9jb2xzKGlucHV0LCBmaXJzdCkge1xuXG4gICAgaWYgKGZpcnN0ID09PSB0cnVlKSB7XG4gICAgICAgIGZpcnN0ID0gMDtcbiAgICB9XG5cbiAgICB2YXIgcHJvdHMgPSBcIlwiO1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHByb3RzID0gbmV3IFVSTChpbnB1dCkucHJvdG9jb2w7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfSBlbHNlIGlmIChpbnB1dCAmJiBpbnB1dC5jb25zdHJ1Y3RvciA9PT0gVVJMKSB7XG4gICAgICAgIHByb3RzID0gaW5wdXQucHJvdG9jb2w7XG4gICAgfVxuXG4gICAgdmFyIHNwbGl0cyA9IHByb3RzLnNwbGl0KC9cXDp8XFwrLykuZmlsdGVyKEJvb2xlYW4pO1xuXG4gICAgaWYgKHR5cGVvZiBmaXJzdCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gc3BsaXRzW2ZpcnN0XTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3BsaXRzO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72337\n')}}]);